apply plugin: "maven-publish"
apply plugin: "signing"

task sourceJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}
task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}


if(!hasProperty('oss.publish.username') || !hasProperty('oss.publish.password')) {
    ext['oss.publish.username'] = ''
    ext['oss.publish.password'] = ''
}

publishing {
    publications {
        oss(MavenPublication) {
            pom {
                name = "Gradle practice: ${project.name}"
                description = "${project.description}"
                url = 'https://github.com/yxc023/gradle-practice'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://mit-license.org/'
                    }
                }
                developers {
                    developer {
                        id = 'yxc023'
                        name = 'Michael Yang'
                        email = 'yxc023@qq.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/yxc023/expressive-exception.git'
                    developerConnection = 'scm:git:git://github.com/yxc023/expressive-exception.git'
                    url = 'https://github.com/yxc023/expressive-exception'
                }
            }
            from components.java
            artifact sourceJar
            artifact javadocJar

        }
    }
    repositories {
        maven {
            name "snapshot"
            url "https://oss.sonatype.org/content/repositories/snapshots"
            credentials {
                username property('oss.publish.username')
                password property('oss.publish.password')
            }
        }
        maven {
            name "release"
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username property('oss.publish.username')
                password property('oss.publish.password')
            }
        }
    }
}

signing {
    sign publishing.publications.oss
}